//TO%
@function prc($pxOne, $pxTwo) {
  $result: ($pxOne/$pxTwo) * 100%;
  @return $result;
}

//REM
@function rem($px) {
  $result: ($px/16) + rem;
  @return $result;
}

//EM
@function em($px) {
  $result: ($px/16) + rem;
  @return $result;
}

// адаптивное свойство
$maxWidth: 1920 / 16; //максимальный размер экрана (px)
$maxWidthContainer: 1200 / 16; //максимальный размер контейнера (px)

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: ($startSize / 16)- ($minSize / 16);

  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: ($startSize / 16) + rem;

    @media (max-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthContainer -
              20})
      );
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: ($startSize / 16) + rem;

    @media (min-width: #{$maxWidthContainer + rem}) {
      #{$property}: calc(
        #{($minSize / 16) + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidth -
              20})
      );
    }
  } @else {
    //Всегда
    #{$property}: calc(
      #{($minSize / 16) +
        rem} +
        #{$addSize} *
        ((100vw - 20rem) / #{$maxWidth - 20})
    );
  }
}

//@include adaptiv-value("значение", начальный размер, конечный размер, тип(1-меньше контейнера, 2-больше, 0-всегда))

$color-theme: 10;

.content {
  margin-left: auto;
  margin-right: auto;
  width: 95vw;
}
.calc {
  background-color: hsl($color-theme, 30%, 50%);
  //width: 90vw;
  height: 100vh;
  border-radius: rem(10);
  &__keyboard {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: rem(10);
    max-width: 90%;
    margin-left: auto;
    margin-right: auto;
  }
  &__key {
    margin: rem(10);
    width: 100%;
    min-height: rem(50);
    height: 100%;
    border-radius: rem(5);
    background-color: hsl($color-theme, 10%, 70%);
    box-shadow: 3px 3px 1px hsl($color-theme, 40%, 40%);
    transition: 0.3s;
    display: flex;
    justify-content: center;
    align-items: center;
    color: hsl($color-theme, 10%, 30%);
    font-size: 2rem;
    &:hover {
      margin: rem(13) rem(7) rem(7) rem(13);
      box-shadow: 0px 0px 1px hsl($color-theme, 40%, 40%);
    }
  }
}
